// <auto-generated />
using CourseService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseService.Migrations
{
    [DbContext(typeof(CourseServiceDbContext))]
    [Migration("20191219144737_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("CourseService.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C# Programming"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ruby Programming"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Java Programming"
                        });
                });

            modelBuilder.Entity("CourseService.Models.Enrollment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            UserId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            UserId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            UserId = 2,
                            CourseId = 3
                        },
                        new
                        {
                            UserId = 3,
                            CourseId = 1
                        },
                        new
                        {
                            UserId = 3,
                            CourseId = 3
                        });
                });

            modelBuilder.Entity("CourseService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jack.tench@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Email = "luke.lihou@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            Email = "graham.essau@gmail.com"
                        });
                });

            modelBuilder.Entity("CourseService.Models.Enrollment", b =>
                {
                    b.HasOne("CourseService.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseService.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
